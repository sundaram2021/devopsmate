name: DevOpsMate CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME: ${{ github.repository }}
  DOCKER_IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Go Environment
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.6'

    - name: Install DevOpsMate
      run: go install path/to/devopsmate

    - name: Dockerize Application
      run: |
        mate dockerize -f ./Dockerfile

    - name: Login to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

    - name: Build Docker Image
      run: |
        docker build -t $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG .

    - name: Push Docker Image to Docker Hub
      run: |
        docker push $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG

    - name: Start SonarQube Container
      run: |
        docker run -d --name sonarqube -p 9000:9000 sonarqube:lts

    - name: Wait for SonarQube to Start
      run: |
        until $(curl --output /dev/null --silent --head --fail http://localhost:9000); do
          printf '.'
          sleep 5
        done

    - name: Run SonarQube Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        mate scan --sonar-url http://localhost:9000 --sonar-token $SONAR_TOKEN

    - name: Stop SonarQube Container
      if: always()
      run: |
        docker stop sonarqube
        docker rm sonarqube

    - name: Push Code to GitHub
      uses: ad-m/github-push-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: main
        force: true

    - name: Deploy to Civo Kubernetes
      env:
        CIVO_TOKEN: ${{ secrets.CIVO_TOKEN }}
      run: |
        mate deploy -t $CIVO_TOKEN -f ./deployment.yaml

    - name: Output Application URL
      run: |
        echo "Access your application at: http://your-app-url.com"
